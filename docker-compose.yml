version: "3.9"

services:
  postgres:
    image: postgres:14.4
    container_name: rabbitmq-consumer-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - ./data-postgresql:/var/lib/postgresql/data
      - ./init-db/postgresql:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${DB_NAME} -U ${DB_USER}" ]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - rabbitmq-consumer

  mysql:
    image: mysql:8
    container_name: rabbitmq-consumer-mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    networks:
      - rabbitmq-consumer
    restart: unless-stopped
    volumes:
      - ./data-mysql:/var/lib/mysql
      - ./init-db/mysql:/docker-entrypoint-initdb.d

  rabbitmq:
    image: rabbitmq:3.9.11-management-alpine
    container_name: rabbitmq-consumer-rabbitmq
    hostname: rabbitmq
    networks:
      - rabbitmq-consumer
    volumes:
      - ./data-rabbit/data:/var/lib/rabbitmq
      - ./data-rabbit/log:/var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}
    ports:
      - "5672:5672"
      - "15672:15672"
networks:
  rabbitmq-consumer:
